/*
*			Copyright Author
* (USE & RESTRICTIONS - Please read COPYRIGHT file)

* Version		: XX.XX
* Date		: 4/20/11 1:09 PM
*/

// Default Package
package DWLProject;

import java.awt.Dimension;
import java.awt.Point;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class DWLProject_0_1 extends ViewableDigraph{

    private static final String FF_OUT = "FFout";
	private static final String LOAD = "load";
	private static final String START = "start";
	private static final String FF_IN = "FFin";
	private static final String STATS = "stats";
	private static final String ERROR_FILE = "errorFile";
	private static final String HALT = "halt";

	// Add Default Constructor
    public DWLProject_0_1(){
        this("DWLProject_0_1");
    }

    // Add Parameterized Constructor
    public DWLProject_0_1(String name){
        super(name);

// Structure information start
        // Add input port names

        // Add output port names

//add test input ports:

        //TODO: read config file to obtain number of processors
        int numberOfProcessors = 2;
        // Initialize sub-components
        ViewableDigraph EF_1_1 =  new EF_1_1("EF_1_1");
        ViewableDigraph DWL_1_1 =  new DWL_1_1("DWL_1_1", numberOfProcessors);
        ViewableAtomic DW_1_1 =  new DW_1_1("DW_1_1", numberOfProcessors);

        // Add sub-components
        add(EF_1_1);
        add(DWL_1_1);
        add(DW_1_1);

        // Add Couplings
        addCoupling(DWL_1_1, LOAD, DW_1_1, LOAD);
        addCoupling(EF_1_1, FF_OUT, DWL_1_1, FF_IN);
        addCoupling(EF_1_1, START, DWL_1_1, START);
        addCoupling(DW_1_1, STATS, EF_1_1, STATS);
        addCoupling(DWL_1_1, ERROR_FILE, EF_1_1, ERROR_FILE);
        addCoupling(DW_1_1, HALT, DWL_1_1, HALT);
        addCoupling(DWL_1_1, STATS, EF_1_1, STATS);

// Structure information end
        initialize();
        }

    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(1618, 538);
        ((ViewableComponent)withName("EF_1_1")).setPreferredLocation(new Point(20, 46));
        ((ViewableComponent)withName("DWL_1_1")).setPreferredLocation(new Point(419, 44));
        ((ViewableComponent)withName("DW_1_1")).setPreferredLocation(new Point(1180, 244));
    }
    }
